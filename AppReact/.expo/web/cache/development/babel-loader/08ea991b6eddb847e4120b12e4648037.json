{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./ProductsScreenStyles\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport { getPartnersName, getPartnersById, getProducts } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewButtonSales from \"../../components/ViewButtonSales/ViewButtonSales\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    viewportWidth = _Dimensions$get.width;\n\nexport default function ProductsScreen(props) {\n  var _route$params;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.item;\n  var partners = getPartnersById(item.partners_Id);\n  var title = getPartnersName(partners.id);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSlide = _useState2[0],\n      setActiveSlide = _useState2[1];\n\n  var slider1Ref = useRef();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTransparent: \"false\",\n      headerLeft: function headerLeft() {\n        return React.createElement(BackButton, {\n          onPress: function onPress() {\n            navigation.goBack();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, null);\n      }\n    });\n  }, []);\n\n  var renderImage = function renderImage(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, null, React.createElement(View, {\n      style: styles.imageContainer\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: {\n        uri: item\n      }\n    })));\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.carouselContainer\n  }, React.createElement(View, {\n    style: styles.carousel\n  }, React.createElement(Carousel, {\n    ref: slider1Ref,\n    data: item.photosArray,\n    renderItem: renderImage,\n    sliderWidth: viewportWidth,\n    itemWidth: viewportWidth,\n    inactiveSlideScale: 1,\n    inactiveSlideOpacity: 1,\n    firstItem: 0,\n    loop: false,\n    autoplay: false,\n    autoplayDelay: 500,\n    autoplayInterval: 3000,\n    onSnapToItem: function onSnapToItem(index) {\n      return setActiveSlide(0);\n    }\n  }), React.createElement(Pagination, {\n    dotsLength: item.photosArray.length,\n    activeDotIndex: activeSlide,\n    containerStyle: styles.paginationContainer,\n    dotColor: \"rgba(255, 255, 255, 0.92)\",\n    dotStyle: styles.paginationDot,\n    inactiveDotColor: \"white\",\n    inactiveDotOpacity: 0.4,\n    inactiveDotScale: 0.6,\n    carouselRef: slider1Ref.current,\n    tappableDots: !!slider1Ref.current\n  }))), React.createElement(View, {\n    style: styles.infoProductContainer\n  }, React.createElement(Text, {\n    style: styles.infoProductName\n  }, item.productTitle), React.createElement(View, {\n    style: styles.infoContainer\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return navigation.navigate(\"ProductList\", {\n        partners: partners,\n        title: title\n      });\n    }\n  }, React.createElement(Text, {\n    style: styles.partners\n  }, getPartnersName(item.partners_Id).toUpperCase()))), React.createElement(View, {\n    style: styles.infoContainer\n  }, React.createElement(Image, {\n    style: styles.infoPhoto,\n    source: require(\"../../../assets/icons/time.png\")\n  }), React.createElement(Text, {\n    style: styles.infoProduct\n  }, item.productTime, \"  \")), React.createElement(View, {\n    style: styles.infoContainer\n  }, React.createElement(ViewButtonSales, {\n    onPress: function onPress() {}\n  })), React.createElement(View, {\n    style: styles.infoContainer\n  }, React.createElement(Text, {\n    style: styles.infoDescriptionProduct\n  }, item.description))));\n}","map":{"version":3,"sources":["E:/integration/projet-dintegration/AppReact/src/screens/Products/ProductsScreen.js"],"names":["React","useLayoutEffect","useRef","useState","styles","Carousel","Pagination","getPartnersName","getPartnersById","getProducts","BackButton","ViewButtonSales","Dimensions","get","viewportWidth","width","ProductsScreen","props","navigation","route","item","params","partners","partners_Id","title","id","activeSlide","setActiveSlide","slider1Ref","setOptions","headerTransparent","headerLeft","goBack","headerRight","renderImage","imageContainer","image","uri","container","carouselContainer","carousel","photosArray","index","length","paginationContainer","paginationDot","current","infoProductContainer","infoProductName","productTitle","infoContainer","navigate","toUpperCase","infoPhoto","require","infoProduct","productTime","infoDescriptionProduct","description"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useRef, useState } from \"react\";\r\nimport { ScrollView, Text, View, Image, Dimensions, TouchableHighlight } from \"react-native\";\r\nimport styles from \"./ProductsScreenStyles\";\r\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\r\nimport { getPartnersName, getPartnersById, getProducts } from \"../../data/MockDataAPI\";\r\nimport BackButton from \"../../components/BackButton/BackButton\";\r\nimport ViewButtonSales from '../../components/ViewButtonSales/ViewButtonSales';\r\n\r\nconst { width: viewportWidth } = Dimensions.get(\"window\");\r\n\r\nexport default function ProductsScreen(props) {\r\n  const { navigation, route } = props;\r\n\r\n  const item = route.params?.item;\r\n  const partners = getPartnersById(item.partners_Id);\r\n  const title = getPartnersName(partners.id);\r\n\r\n  const [activeSlide, setActiveSlide] = useState(0);\r\n\r\n  const slider1Ref = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerTransparent: \"false\",\r\n      headerLeft: () => (\r\n        <BackButton\r\n          onPress={() => {\r\n            navigation.goBack();\r\n          }}\r\n        />\r\n      ),\r\n      headerRight: () => <View />,\r\n    });\r\n  }, []);\r\n\r\n  const renderImage = ({ item }) => (\r\n    <TouchableHighlight>\r\n      <View style={styles.imageContainer}>\r\n        <Image style={styles.image} source={{ uri: item }} />\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.carouselContainer}>\r\n        <View style={styles.carousel}>\r\n          <Carousel\r\n            ref={slider1Ref}\r\n            data={item.photosArray}\r\n            renderItem={renderImage}\r\n            sliderWidth={viewportWidth}\r\n            itemWidth={viewportWidth}\r\n            inactiveSlideScale={1}\r\n            inactiveSlideOpacity={1}\r\n            firstItem={0}\r\n            loop={false}\r\n            autoplay={false}\r\n            autoplayDelay={500}\r\n            autoplayInterval={3000}\r\n            onSnapToItem={(index) => setActiveSlide(0)}\r\n          />\r\n          <Pagination\r\n            dotsLength={item.photosArray.length}\r\n            activeDotIndex={activeSlide}\r\n            containerStyle={styles.paginationContainer}\r\n            dotColor=\"rgba(255, 255, 255, 0.92)\"\r\n            dotStyle={styles.paginationDot}\r\n            inactiveDotColor=\"white\"\r\n            inactiveDotOpacity={0.4}\r\n            inactiveDotScale={0.6}\r\n            carouselRef={slider1Ref.current}\r\n            tappableDots={!!slider1Ref.current}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.infoProductContainer}>\r\n        <Text style={styles.infoProductName}>{item.productTitle}</Text>\r\n        <View style={styles.infoContainer}>\r\n          <TouchableHighlight onPress={() => navigation.navigate(\"ProductList\", { partners, title })}>\r\n            <Text style={styles.partners}>{getPartnersName(item.partners_Id).toUpperCase()}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n        <View style={styles.infoContainer}>\r\n          <Image style={styles.infoPhoto} source={require(\"../../../assets/icons/time.png\")} />\r\n          <Text style={styles.infoProduct}>{item.productTime}  </Text>\r\n        </View>\r\n\r\n        <View style={styles.infoContainer}>\r\n        <ViewButtonSales\r\n            onPress={() => {\r\n\r\n\r\n            }}\r\n          />\r\n        </View>\r\n        <View style={styles.infoContainer}>\r\n          <Text style={styles.infoDescriptionProduct}>{item.description}</Text>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}