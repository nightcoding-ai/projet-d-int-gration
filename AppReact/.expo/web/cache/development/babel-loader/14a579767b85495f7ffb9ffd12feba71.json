{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./ProductListScreenStyle\";\nimport { getProducts, getPartnersName } from \"../../data/MockDataAPI\";\nexport default function ProductListScreen(props) {\n  var _route$params;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.partners;\n  var productsArray = getProducts(item.id);\n  useLayoutEffect(function () {\n    var _route$params2;\n\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerRight: function headerRight() {\n        return React.createElement(View, null);\n      }\n    });\n  }, []);\n\n  var onPressProduct = function onPressProduct(item) {\n    navigation.navigate(\"Products\", {\n      item: item\n    });\n  };\n\n  var renderProducts = function renderProducts(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressProduct(item);\n      }\n    }, React.createElement(View, {\n      style: styles.container\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.photo_url\n      }\n    }), React.createElement(Text, {\n      style: styles.title\n    }, item.productTitle), React.createElement(Text, {\n      style: styles.product\n    }, getPartnersName(item.partners_Id))));\n  };\n\n  return React.createElement(View, null, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: productsArray,\n    renderItem: renderProducts,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.productsId;\n    }\n  }));\n}","map":{"version":3,"sources":["E:/integration/projet-dintegration/AppReact/src/screens/ProductList/ProductListScreen.js"],"names":["React","useLayoutEffect","styles","getProducts","getPartnersName","ProductListScreen","props","navigation","route","item","params","partners","productsArray","id","setOptions","title","headerRight","onPressProduct","navigate","renderProducts","container","photo","uri","photo_url","productTitle","product","partners_Id","productsId"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC/C,MAAQC,UAAR,GAA8BD,KAA9B,CAAQC,UAAR;AAAA,MAAoBC,KAApB,GAA8BF,KAA9B,CAAoBE,KAApB;AAEA,MAAMC,IAAI,GAAGD,KAAH,qCAAGA,KAAK,CAAEE,MAAV,qBAAG,cAAeC,QAA5B;AACA,MAAMC,aAAa,GAAGT,WAAW,CAACM,IAAI,CAACI,EAAN,CAAjC;AAEAZ,EAAAA,eAAe,CAAC,YAAM;AAAA;;AACpBM,IAAAA,UAAU,CAACO,UAAX,CAAsB;AACpBC,MAAAA,KAAK,oBAAEP,KAAK,CAACE,MAAR,qBAAE,eAAcK,KADD;AAEpBC,MAAAA,WAAW,EAAE;AAAA,eAAM,oBAAC,IAAD,OAAN;AAAA;AAFO,KAAtB;AAID,GALc,EAKZ,EALY,CAAf;;AAOA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACR,IAAD,EAAU;AAC/BF,IAAAA,UAAU,CAACW,QAAX,CAAoB,UAApB,EAAgC;AAAET,MAAAA,IAAI,EAAJA;AAAF,KAAhC;AACD,GAFD;;AAIA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB;AAAA,QAAGV,IAAH,QAAGA,IAAH;AAAA,WACrB,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAC,qBAAlC;AAAwD,MAAA,OAAO,EAAE;AAAA,eAAMQ,cAAc,CAACR,IAAD,CAApB;AAAA;AAAjE,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACkB;AAApB,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAElB,MAAM,CAACmB,KAArB;AAA4B,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEb,IAAI,CAACc;AAAZ;AAApC,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,MAAM,CAACa;AAApB,OAA4BN,IAAI,CAACe,YAAjC,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEtB,MAAM,CAACuB;AAApB,OAA8BrB,eAAe,CAACK,IAAI,CAACiB,WAAN,CAA7C,CAHF,CADF,CADqB;AAAA,GAAvB;;AAUA,SACE,oBAAC,IAAD,QACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AAAmB,IAAA,4BAA4B,EAAE,KAAjD;AAAwD,IAAA,UAAU,EAAE,CAApE;AAAuE,IAAA,IAAI,EAAEd,aAA7E;AAA4F,IAAA,UAAU,EAAEO,cAAxG;AAAwH,IAAA,YAAY,EAAE,sBAACV,IAAD;AAAA,kBAAaA,IAAI,CAACkB,UAAlB;AAAA;AAAtI,IADF,CADF;AAKD","sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\r\nimport styles from \"./ProductListScreenStyle\";\r\nimport { getProducts, getPartnersName } from \"../../data/MockDataAPI\";\r\n\r\nexport default function ProductListScreen(props) {\r\n  const { navigation, route } = props;\r\n\r\n  const item = route?.params?.partners;\r\n  const productsArray = getProducts(item.id);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: route.params?.title,\r\n      headerRight: () => <View />,\r\n    });\r\n  }, []);\r\n\r\n  const onPressProduct = (item) => {\r\n    navigation.navigate(\"Products\", { item });\r\n  };\r\n\r\n  const renderProducts = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressProduct(item)}>\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.title}>{item.productTitle}</Text>\r\n        <Text style={styles.product}>{getPartnersName(item.partners_Id)}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  return (\r\n    <View>\r\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={productsArray} renderItem={renderProducts} keyExtractor={(item) => `${item.productsId}`} />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}