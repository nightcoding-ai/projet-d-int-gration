{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"./PartnersScreenStyle\";\nimport { partners } from \"../../data/dataArrays\";\nimport { getNumberProducts } from \"../../data/MockDataAPI\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nexport default function PartnersScreen(props) {\n  var navigation = props.navigation;\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, null);\n      }\n    });\n  }, []);\n\n  var onPressPartners = function onPressPartners(item) {\n    var title = item.name;\n    var partners = item;\n    navigation.navigate(\"ProductList\", {\n      partners: partners,\n      title: title\n    });\n  };\n\n  var renderPartners = function renderPartners(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressPartners(item);\n      }\n    }, React.createElement(View, {\n      style: styles.partnersItemContainer\n    }, React.createElement(Image, {\n      style: styles.partnersPhoto,\n      source: {\n        uri: item.photo_url\n      }\n    }), React.createElement(Text, {\n      style: styles.partnersName\n    }, item.name), React.createElement(Text, {\n      style: styles.partnersInfo\n    }, getNumberProducts(item.id), \" produit(s) disponible(s)\")));\n  };\n\n  return React.createElement(View, null, React.createElement(FlatList, {\n    data: partners,\n    renderItem: renderPartners,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    }\n  }));\n}","map":{"version":3,"sources":["E:/integration/projet-dintegration/AppReact/src/screens/Partners/PartnersScreen.js"],"names":["React","useLayoutEffect","styles","partners","getNumberProducts","MenuImage","PartnersScreen","props","navigation","setOptions","headerLeft","openDrawer","headerRight","onPressPartners","item","title","name","navigate","renderPartners","partnersItemContainer","partnersPhoto","uri","photo_url","partnersName","partnersInfo","id"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;;;;;;;AAEA,OAAOC,MAAP;AAEA,SAASC,QAAT;AACA,SAASC,iBAAT;AACA,OAAOC,SAAP;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE1C,MAAQC,UAAR,GAAuBD,KAAvB,CAAQC,UAAR;AAEAP,EAAAA,eAAe,CAAC,YAAM;AAClBO,IAAAA,UAAU,CAACC,UAAX,CAAsB;AAEpBC,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,SAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbF,YAAAA,UAAU,CAACG,UAAX;AACD;AAHH,UADU;AAAA,OAFQ;AASpBC,MAAAA,WAAW,EAAE;AAAA,eAAM,oBAAC,IAAD,OAAN;AAAA;AATO,KAAtB;AAWD,GAZY,EAYV,EAZU,CAAf;;AAcE,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,QAAMC,KAAK,GAAGD,IAAI,CAACE,IAAnB;AACA,QAAMb,QAAQ,GAAGW,IAAjB;AACAN,IAAAA,UAAU,CAACS,QAAX,CAAoB,aAApB,EAAmC;AAAEd,MAAAA,QAAQ,EAARA,QAAF;AAAYY,MAAAA,KAAK,EAALA;AAAZ,KAAnC;AACD,GAJD;;AAMA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA,QAAGJ,IAAH,QAAGA,IAAH;AAAA,WACrB,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAC,qBAAlC;AAAwD,MAAA,OAAO,EAAE;AAAA,eAAMD,eAAe,CAACC,IAAD,CAArB;AAAA;AAAjE,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACiB;AAApB,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,MAAM,CAACkB,aAArB;AAAoC,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEP,IAAI,CAACQ;AAAZ;AAA5C,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEpB,MAAM,CAACqB;AAApB,OAAmCT,IAAI,CAACE,IAAxC,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEd,MAAM,CAACsB;AAApB,OAAmCpB,iBAAiB,CAACU,IAAI,CAACW,EAAN,CAApD,8BAHF,CADF,CADqB;AAAA,GAAvB;;AAWA,SACE,oBAAC,IAAD,QACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEtB,QAAhB;AAA0B,IAAA,UAAU,EAAEe,cAAtC;AAAsD,IAAA,YAAY,EAAE,sBAACJ,IAAD;AAAA,kBAAaA,IAAI,CAACW,EAAlB;AAAA;AAApE,IADF,CADF;AAKD","sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport { FlatList, Text, View, Image, TouchableHighlight, Pressable } from \"react-native\";\r\nimport styles from \"./PartnersScreenStyle\";\r\n\r\nimport { partners } from \"../../data/dataArrays\";\r\nimport { getNumberProducts } from \"../../data/MockDataAPI\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\n\r\n\r\nexport default function PartnersScreen(props) {\r\n\r\n    const { navigation } = props;\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n\r\n          headerLeft: () => (\r\n            <MenuImage\r\n              onPress={() => {\r\n                navigation.openDrawer();\r\n              }}\r\n            />\r\n          ),\r\n          headerRight: () => <View />,\r\n        });\r\n      }, []);\r\n\r\n      const onPressPartners = (item) => {\r\n        const title = item.name;\r\n        const partners = item;\r\n        navigation.navigate(\"ProductList\", { partners, title });\r\n      };\r\n\r\n      const renderPartners = ({ item }) => (\r\n        <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressPartners(item)}>\r\n          <View style={styles.partnersItemContainer}>\r\n            <Image style={styles.partnersPhoto} source={{ uri: item.photo_url }} />\r\n            <Text style={styles.partnersName}>{item.name}</Text>\r\n            <Text style={styles.partnersInfo}>{getNumberProducts(item.id)} produit(s) disponible(s)</Text>\r\n          </View>\r\n        </TouchableHighlight>\r\n\r\n      );\r\n\r\n      return (\r\n        <View>\r\n          <FlatList data={partners} renderItem={renderPartners} keyExtractor={(item) => `${item.id}`} />\r\n        </View>\r\n      );\r\n    }"]},"metadata":{},"sourceType":"module"}