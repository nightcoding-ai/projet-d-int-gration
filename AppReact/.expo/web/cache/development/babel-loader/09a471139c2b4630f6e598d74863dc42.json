{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"./SearchScreenStyle\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getProductsByPartnersName, getProductsByProductName, getPartnersName } from \"../../data/MockDataAPI\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nexport default function SearchScreen(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(BackButton, {\n          onPress: function onPress() {\n            navigation.goBack();\n          }\n        });\n      },\n      headerTitle: function headerTitle() {\n        return React.createElement(View, {\n          style: styles.searchContainer\n        }, React.createElement(Image, {\n          style: styles.searchIcon,\n          source: require(\"../../../assets/icons/search.png\")\n        }), React.createElement(TextInput, {\n          style: styles.searchInput,\n          onChangeText: handleSearch,\n          value: value\n        }), React.createElement(Pressable, {\n          onPress: function onPress() {\n            return handleSearch(\"\");\n          }\n        }, React.createElement(Image, {\n          style: styles.searchIcon,\n          source: require(\"../../../assets/icons/close.png\")\n        })));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, null);\n      }\n    });\n  }, [value]);\n  useEffect(function () {}, [value]);\n\n  var handleSearch = function handleSearch(text) {\n    setValue(text);\n    var productArray1 = getProductsByProductName(text);\n    var productArray2 = getProductsByPartnersName(text);\n    var aux = productArray1.concat(productArray2);\n\n    var productArray = _toConsumableArray(new Set(aux));\n\n    if (text == \"\") {\n      setData([]);\n    } else {\n      setData(productArray);\n    }\n  };\n\n  var onPressProduct = function onPressProduct(item) {\n    navigation.navigate(\"Products\", {\n      item: item\n    });\n  };\n\n  var renderProducts = function renderProducts(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressProduct(item);\n      }\n    }, React.createElement(View, {\n      style: styles.container\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.photo_url\n      }\n    }), React.createElement(Text, {\n      style: styles.title\n    }, item.productTitle), React.createElement(Text, {\n      style: styles.product\n    }, getPartnersName(item.partners_Id))));\n  };\n\n  return React.createElement(View, null, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: data,\n    renderItem: renderProducts,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.productsId;\n    }\n  }));\n}","map":{"version":3,"sources":["E:/integration/projet-dintegration/AppReact/src/screens/Search/SearchScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","styles","MenuImage","getProductsByPartnersName","getProductsByProductName","getPartnersName","TextInput","BackButton","SearchScreen","props","navigation","value","setValue","data","setData","setOptions","headerLeft","goBack","headerTitle","searchContainer","searchIcon","require","searchInput","handleSearch","headerRight","text","productArray1","productArray2","aux","concat","productArray","Set","onPressProduct","item","navigate","renderProducts","container","photo","uri","photo_url","title","productTitle","product","partners_Id","productsId"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { FlatList, Text, View, Image, TouchableHighlight, Pressable } from \"react-native\";\r\nimport styles from \"./SearchScreenStyle\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\nimport { getProductsByPartnersName, getProductsByProductName, getPartnersName } from \"../../data/MockDataAPI\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport BackButton from '../../components/BackButton/BackButton';\r\n\r\nexport default function SearchScreen(props) {\r\n    const { navigation } = props;\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [data, setData] = useState([]);\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n          headerLeft: () => (\r\n            <BackButton\r\n              onPress={() => {\r\n                navigation.goBack();\r\n              }}\r\n            />\r\n          ),\r\n          headerTitle: () => (\r\n            <View style={styles.searchContainer}>\r\n              <Image style={styles.searchIcon} source={require(\"../../../assets/icons/search.png\")} />\r\n              <TextInput\r\n                style={styles.searchInput}\r\n                onChangeText={handleSearch}\r\n                value={value}\r\n              />\r\n              <Pressable onPress={() => handleSearch(\"\")}>\r\n              <Image style={styles.searchIcon} source={require(\"../../../assets/icons/close.png\")} />\r\n              </Pressable>\r\n            </View>\r\n          ),\r\n          headerRight: () => <View />,\r\n        });\r\n      }, [value]);\r\n\r\n      useEffect(() => {}, [value]);\r\n\r\n      const handleSearch = (text) => {\r\n        setValue(text);\r\n        var productArray1 = getProductsByProductName(text);\r\n        var productArray2 = getProductsByPartnersName(text);\r\n        var aux = productArray1.concat(productArray2);\r\n        var productArray = [...new Set(aux)];\r\n\r\n        if (text == \"\") {\r\n          setData([]);\r\n        } else {\r\n          setData(productArray);\r\n        }\r\n      };\r\n\r\n      const onPressProduct = (item) => {\r\n        navigation.navigate(\"Products\", { item });\r\n      };\r\n\r\n      const renderProducts = ({ item }) => (\r\n        <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressProduct(item)}>\r\n          <View style={styles.container}>\r\n            <Image style={styles.photo} source={{ uri: item.photo_url }} />\r\n            <Text style={styles.title}>{item.productTitle}</Text>\r\n            <Text style={styles.product}>{getPartnersName(item.partners_Id)}</Text>\r\n          </View>\r\n        </TouchableHighlight>\r\n      );\r\n\r\n      return (\r\n        <View>\r\n          <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={data} renderItem={renderProducts} keyExtractor={(item) => `${item.productsId}`} />\r\n        </View>\r\n      );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}